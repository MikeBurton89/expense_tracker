{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","console","log","ExpenseForm","enteredTitle","setEnteredTitle","enteredDate","setEnteredDate","enteredAmount","setEnteredAmount","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f1c3af7.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value)\r\n\r\n    };\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react'\r\nimport './ExpenseDate.css'\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate\r\n","import React from 'react'\r\nimport Card from '../UI/Card'\r\nimport ExpenseDate from './ExpenseDate'\r\nimport './ExpenseItem.css'\r\n\r\n\r\nconst ExpenseItem = (props) => {\r\n\r\n    return (\r\n        <li>\r\n            <Card className='expense-item'>\r\n                <ExpenseDate date={props.date} />\r\n                <div className='expense-item__description'>\r\n                    <h2>{props.title}</h2>\r\n                </div>\r\n                <div className='expense-item__price'>${props.amount}</div>\r\n            </Card>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ExpenseItem\r\n","import React from 'react'\r\nimport ExpenseItem from './ExpenseItem'\r\nimport './ExpensesList.css'\r\n\r\nconst ExpensesList = props => {\r\n\r\n    if (props.items.length === 0) {\r\n        return <h2 className=\"expenses-list__fallback\">Found no expenses</h2>\r\n\r\n    }\r\n    return <ul className='expenses-list'>\r\n        {props.items.map((expense) => <ExpenseItem key={expense.id} title={expense.title} amount={expense.amount} date={expense.date} />)}\r\n\r\n    </ul>\r\n\r\n\r\n}\r\n\r\n\r\nexport default ExpensesList\r\n","import React from 'react'\r\nimport './ChartBar.css'\r\n\r\nconst ChartBar = props => {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%'\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='chart-bar'>\r\n            <div className='chart-bar__inner'>\r\n                <div className='chart-bar__fill' style={{ height: barFillHeight }}></div>\r\n            </div>\r\n            <div className='chart-bar__label'>{props.label}</div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default ChartBar\r\n","import React from 'react'\r\nimport ChartBar from './ChartBar';\r\nimport './Chart.css'\r\n\r\nconst Chart = props => {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value)\r\n    const totalMaximum = Math.max(...dataPointValues)\r\n    return (\r\n        <div className='chart'>\r\n            {props.dataPoints.map(dataPoint => <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalMaximum} label={dataPoint.label} />)}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Chart\r\n","import React from 'react'\r\nimport Chart from '../Chart/Chart'\r\n\r\nconst ExpensesChart = props => {\r\n    const chartDataPoints = [\r\n        { label: 'Jan', value: 0 },\r\n        { label: 'Feb', value: 0 },\r\n        { label: 'Mar', value: 0 },\r\n        { label: 'Apr', value: 0 },\r\n        { label: 'May', value: 0 },\r\n        { label: 'Jun', value: 0 },\r\n        { label: 'Jul', value: 0 },\r\n        { label: 'Aug', value: 0 },\r\n        { label: 'Sep', value: 0 },\r\n        { label: 'Oct', value: 0 },\r\n        { label: 'Nov', value: 0 },\r\n        { label: 'Dec', value: 0 }\r\n    ];\r\n\r\n    for (const expense of props.expenses) {\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return (\r\n        <Chart dataPoints={chartDataPoints} />\r\n    )\r\n};\r\n\r\nexport default ExpensesChart\r\n","import React, { useState } from 'react'\r\nimport Card from '../UI/Card'\r\nimport './Expenses.css'\r\nimport ExpensesFilter from './ExpensesFilter'\r\nimport ExpensesList from './ExpensesList'\r\nimport ExpensesChart from './ExpensesChart'\r\n\r\nconst Expenses = (props) => {\r\n\r\n    const [filteredYear, setFilteredYear] = useState('2021')\r\n\r\n    const filterChangeHandler = selectedYear => {\r\n        setFilteredYear(selectedYear)\r\n        console.log(selectedYear)\r\n\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter(expense => {\r\n        return expense.date.getFullYear().toString() === filteredYear;\r\n    })\r\n\r\n\r\n    return (\r\n        <Card className='expenses'>\r\n            <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\r\n            <ExpensesChart expenses={filteredExpenses} />\r\n            <ExpensesList items={filteredExpenses} />\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default Expenses","import React, { useState } from 'react'\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: ''\r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value)\r\n        // setUserInput(\r\n        //     {\r\n        //         ...userInput,\r\n        //         enteredTitle: event.target.value\r\n        //     });\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredTitle: event.target.value }\r\n        // });\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value)\r\n        // setUserInput(\r\n        //     {\r\n        //         ...userInput,\r\n        //         enteredDate: event.target.value\r\n        //     });\r\n    };\r\n\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value)\r\n        // setUserInput(\r\n        //     {\r\n        //         ...userInput,\r\n        //         enteredAmount: event.target.value\r\n        //     });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault()\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n\r\n        props.onSaveExpenseData(expenseData)\r\n        setEnteredTitle('')\r\n        setEnteredDate('')\r\n        setEnteredAmount('')\r\n    };\r\n\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input type='text' value={enteredTitle} onChange={titleChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler} />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input type='date' value={enteredDate} min='2019-01-01' max='2022-12-31' onChange={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__action'>\r\n                <button type='button' onClick={props.onCancel}> Cancel </button>\r\n                <button type='submit'> Add Expense </button>\r\n            </div>\r\n        </form >\r\n    )\r\n}\r\n\r\nexport default ExpenseForm\r\n","import React, { useState } from 'react'\r\nimport './NewExpense.css'\r\nimport ExpenseForm from './ExpenseForm'\r\n\r\nconst NewExpense = (props) => {\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const saveExpenseDataHandler = (enteredExpenseData) => {\r\n        const expenseData = {\r\n            ...enteredExpenseData,\r\n            id: Math.random().toString()\r\n        };\r\n        props.onAddExpense(expenseData);\r\n    };\r\n\r\n    const startEditingHandler = () => {\r\n        setIsEditing(true);\r\n    };\r\n\r\n    const stopEditingHandler = () => {\r\n        setIsEditing(false);\r\n    }\r\n\r\n    return (\r\n        <div className='new-expense'>\r\n            {!isEditing && <button onClick={startEditingHandler}> Add new Expense </button>}\r\n            {isEditing && <ExpenseForm onCancel={stopEditingHandler} onSaveExpenseData={saveExpenseDataHandler} />}\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NewExpense\r\n","import Expenses from \"./components/Expenses/Expenses\"\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport { useState } from \"react\"\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = expense => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}